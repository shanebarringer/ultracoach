# CodeRabbit Configuration for UltraCoach
# AI-powered code review for ultramarathon coaching platform
# This configuration applies to ALL branches and pull requests

# Language and framework configuration
language: 'en-US'

# Review settings
reviews:
  # Enable auto-review on all PRs across all branches
  auto_review:
    enabled: true
    # Reviews all PRs regardless of target branch (main, develop, feature/*, etc.)

  # Review instructions
  path_instructions:
    # TypeScript and TSX files
    - path: '**/*.{ts,tsx}'
      instructions: |
        Review TypeScript/React code against the following standards:
        - Ensure proper TypeScript types (no 'any' types unless absolutely necessary)
        - Check for React 19 best practices and modern patterns
        - Verify Jotai state management patterns are correctly implemented
        - Ensure proper use of Server/Client Component hybrid pattern for Next.js 15
        - Check for proper error handling with tslog (no console.log)
        - Verify HeroUI component usage follows Mountain Peak design system
        - Check for performance optimizations (memoization, lazy loading)
        - Ensure accessibility standards are met

    # Test files
    - path: '**/*.spec.{ts,tsx}'
      instructions: |
        Review Playwright test code for:
        - Proper test structure and naming conventions
        - Appropriate use of page objects and selectors
        - Comprehensive test coverage for critical user flows
        - Proper cleanup and test isolation
        - Avoid using networkidle for real-time applications

    # API routes
    - path: '**/api/**/*.{ts,tsx}'
      instructions: |
        Review API routes for:
        - Proper authentication with Better Auth
        - Input validation and sanitization
        - Error handling and appropriate status codes
        - Database query optimization with Drizzle ORM
        - Rate limiting considerations
        - Security best practices (no exposed secrets)

    # Database and schema files
    - path: '**/schema.ts'
      instructions: |
        Review database schema for:
        - Proper Drizzle ORM patterns
        - Appropriate indexes for performance
        - Data integrity constraints
        - Better Auth compatibility (role vs userType fields)

    # Styling files
    - path: '**/*.css'
      instructions: |
        Review CSS for:
        - Tailwind CSS v3 best practices
        - Proper use of Mountain Peak design system colors
        - Mobile-first responsive design
        - Performance considerations (avoid excessive gradients)

    # Configuration files
    - path: '**/*.{json,yaml,yml}'
      instructions: |
        Review configuration files for:
        - No hardcoded secrets or sensitive data
        - Proper environment variable usage
        - Consistent formatting

  # Tools configuration
  tools:
    # Enable AST-based code analysis
    ast-grep:
      essential_rules: true

    # ESLint integration
    eslint:
      enabled: true

    # TypeScript checking
    typescript:
      enabled: true
      strict: true

# Code generation settings
code_generation:
  docstrings:
    enabled: true
    style: 'jsdoc'
    path_instructions:
      - path: '**/*.{ts,tsx}'
        instructions: |
          Generate JSDoc-style documentation.
          Include parameter types and return types.
          Add examples for complex functions.
          Do not add "Auto-generated by CodeRabbit" notices.

# Security scanning
security:
  enabled: true
  scan_dependencies: true

# Performance analysis
performance:
  enabled: true
  bundle_size_check: true

# Custom commands
commands:
  - name: 'check-types'
    run: 'pnpm typecheck'
  - name: 'lint'
    run: 'pnpm lint'
  - name: 'format-check'
    run: 'pnpm format:check'
  - name: 'test'
    run: 'pnpm test'

# Ignore patterns
ignore:
  - 'node_modules/**'
  - '.next/**'
  - 'dist/**'
  - 'build/**'
  - '.env*'
  - '*.min.js'
  - '*.min.css'
  - '.context7-docs/**'
  - 'coverage/**'
  - '.playwright/**'

# Pull request settings
pull_request:
  # Summary configuration
  summary:
    enabled: true
    include_stats: true

  # Feedback configuration
  feedback:
    enabled: true
    sentiment: 'constructive'

  # Auto-merge settings (be careful with this)
  auto_merge:
    enabled: false

# Issue integration
issues:
  link_issues: true
  auto_close: false

# Notifications
notifications:
  # Notify on high-severity issues
  high_severity: true

# Rate limiting
rate_limit:
  max_reviews_per_hour: 20

# Custom badges
badges:
  enabled: true
  types:
    - 'security'
    - 'performance'
    - 'code-quality'
